/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { TypeDeclaration } from "../../types/types/TypeDeclaration";
import { HttpService } from "../../service/types/HttpService";
import { ErrorDeclaration } from "../../errors/types/ErrorDeclaration";
import { WithDocs } from "../../commons/types/WithDocs";

export const FernFile: core.serialization.ObjectSchema<serializers.FernFile.Raw, FernDefinition.FernFile> =
    core.serialization
        .object({
            imports: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
            types: core.serialization.record(core.serialization.string(), TypeDeclaration).optional(),
            service: HttpService.optional(),
            errors: core.serialization.record(core.serialization.string(), ErrorDeclaration).optional(),
        })
        .extend(WithDocs);

export declare namespace FernFile {
    interface Raw extends WithDocs.Raw {
        imports?: Record<string, string> | null;
        types?: Record<string, TypeDeclaration.Raw> | null;
        service?: HttpService.Raw | null;
        errors?: Record<string, ErrorDeclaration.Raw> | null;
    }
}
