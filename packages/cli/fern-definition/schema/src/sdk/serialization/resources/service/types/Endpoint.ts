/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { HttpMethod } from "./HttpMethod";
import { HttpPathParameter } from "./HttpPathParameter";
import { HttpRequestSchema } from "./HttpRequestSchema";
import { HttpResponseSchema } from "./HttpResponseSchema";
import { HttpResponseStreamSchema } from "./HttpResponseStreamSchema";
import { ResponseError } from "./ResponseError";
import { ExampleEndpointCall } from "../../examples/types/ExampleEndpointCall";
import { Pagination } from "./Pagination";
import { WithDisplayName } from "../../commons/types/WithDisplayName";

export const Endpoint: core.serialization.ObjectSchema<serializers.Endpoint.Raw, FernDefinition.Endpoint> =
    core.serialization
        .object({
            method: HttpMethod.optional(),
            basePath: core.serialization.property("base-path", core.serialization.string().optional()),
            path: core.serialization.string(),
            url: core.serialization.string().optional(),
            pathParameters: core.serialization.property(
                "path-parameters",
                core.serialization.record(core.serialization.string(), HttpPathParameter).optional()
            ),
            auth: core.serialization.boolean().optional(),
            idempotent: core.serialization.boolean().optional(),
            streamCondition: core.serialization.property("stream-condition", core.serialization.string().optional()),
            request: HttpRequestSchema.optional(),
            response: HttpResponseSchema.optional(),
            responseStream: core.serialization.property("response-stream", HttpResponseStreamSchema.optional()),
            errors: core.serialization.list(ResponseError).optional(),
            examples: core.serialization.list(ExampleEndpointCall).optional(),
            pagination: Pagination.optional(),
        })
        .extend(WithDisplayName);

export declare namespace Endpoint {
    interface Raw extends WithDisplayName.Raw {
        method?: HttpMethod.Raw | null;
        "base-path"?: string | null;
        path: string;
        url?: string | null;
        "path-parameters"?: Record<string, HttpPathParameter.Raw> | null;
        auth?: boolean | null;
        idempotent?: boolean | null;
        "stream-condition"?: string | null;
        request?: HttpRequestSchema.Raw | null;
        response?: HttpResponseSchema.Raw | null;
        "response-stream"?: HttpResponseStreamSchema.Raw | null;
        errors?: ResponseError.Raw[] | null;
        examples?: ExampleEndpointCall.Raw[] | null;
        pagination?: Pagination.Raw | null;
    }
}
