/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { ErrorDiscrimination } from "./ErrorDiscrimination";
import { HttpPathParameterSchema } from "../../service/types/HttpPathParameterSchema";
import { HttpHeader } from "../../service/types/HttpHeader";
import { VariableDeclaration } from "./VariableDeclaration";
import { PaginationScheme } from "../../pagination/types/PaginationScheme";
import { VersionDeclaration } from "../../versioning/types/VersionDeclaration";
import { WithDocs } from "../../commons/types/WithDocs";
import { WithDisplayName } from "../../commons/types/WithDisplayName";
import { WithEnvironments } from "../../environments/types/WithEnvironments";
import { WithAuth } from "../../auth/types/WithAuth";
import { WithHeaders } from "./WithHeaders";

export const RootApiFile: core.serialization.ObjectSchema<serializers.RootApiFile.Raw, FernDefinition.RootApiFile> =
    core.serialization
        .object({
            name: core.serialization.string(),
            imports: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
            "error-discrimination": ErrorDiscrimination.optional(),
            audiences: core.serialization.list(core.serialization.string()).optional(),
            errors: core.serialization.list(core.serialization.string()).optional(),
            "base-path": core.serialization.string().optional(),
            "path-parameters": core.serialization
                .record(core.serialization.string(), HttpPathParameterSchema)
                .optional(),
            "idempotency-headers": core.serialization.record(core.serialization.string(), HttpHeader).optional(),
            variables: core.serialization.record(core.serialization.string(), VariableDeclaration).optional(),
            pagination: PaginationScheme.optional(),
            version: VersionDeclaration.optional(),
        })
        .extend(WithDocs)
        .extend(WithDisplayName)
        .extend(WithEnvironments)
        .extend(WithAuth)
        .extend(WithHeaders);

export declare namespace RootApiFile {
    interface Raw extends WithDocs.Raw, WithDisplayName.Raw, WithEnvironments.Raw, WithAuth.Raw, WithHeaders.Raw {
        name: string;
        imports?: Record<string, string> | null;
        "error-discrimination"?: ErrorDiscrimination.Raw | null;
        audiences?: string[] | null;
        errors?: string[] | null;
        "base-path"?: string | null;
        "path-parameters"?: Record<string, HttpPathParameterSchema.Raw> | null;
        "idempotency-headers"?: Record<string, HttpHeader.Raw> | null;
        variables?: Record<string, VariableDeclaration.Raw> | null;
        pagination?: PaginationScheme.Raw | null;
        version?: VersionDeclaration.Raw | null;
    }
}
