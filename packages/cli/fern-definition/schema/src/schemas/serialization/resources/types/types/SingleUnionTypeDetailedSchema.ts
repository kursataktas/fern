/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { SingleUnionTypeKey } from "./SingleUnionTypeKey";
import { WithDocsSchema } from "../../commons/types/WithDocsSchema";
import { WithName } from "../../commons/types/WithName";
import { WithAvailability } from "../../commons/types/WithAvailability";

export const SingleUnionTypeDetailedSchema: core.serialization.ObjectSchema<
    serializers.SingleUnionTypeDetailedSchema.Raw,
    FernDefinition.SingleUnionTypeDetailedSchema
> = core.serialization
    .object({
        type: core.serialization.string().optional(),
        key: SingleUnionTypeKey.optional(),
    })
    .extend(WithDocsSchema)
    .extend(WithName)
    .extend(WithAvailability);

export declare namespace SingleUnionTypeDetailedSchema {
    interface Raw extends WithDocsSchema.Raw, WithName.Raw, WithAvailability.Raw {
        type?: string | null;
        key?: SingleUnionTypeKey.Raw | null;
    }
}
