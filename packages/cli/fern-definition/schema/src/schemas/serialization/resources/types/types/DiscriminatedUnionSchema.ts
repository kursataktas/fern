/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { BaseTypeDeclaration } from "./BaseTypeDeclaration";
import { TypeReferenceSchema } from "./TypeReferenceSchema";
import { UnionTypeReference } from "./UnionTypeReference";

export const DiscriminatedUnionSchema: core.serialization.ObjectSchema<
    serializers.DiscriminatedUnionSchema.Raw,
    FernDefinition.DiscriminatedUnionSchema
> = core.serialization.object({
    extends: BaseTypeDeclaration,
    "base-properties": core.serialization.record(core.serialization.string(), TypeReferenceSchema).optional(),
    union: core.serialization.record(core.serialization.string(), UnionTypeReference).optional(),
});

export declare namespace DiscriminatedUnionSchema {
    interface Raw {
        extends: BaseTypeDeclaration.Raw;
        "base-properties"?: Record<string, TypeReferenceSchema.Raw> | null;
        union?: Record<string, UnionTypeReference.Raw> | null;
    }
}
