/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { WithDocsSchema } from "../../commons/types/WithDocsSchema";
import { WithName } from "../../commons/types/WithName";
import { WithAudiences } from "../../commons/types/WithAudiences";

export const HttpInlineRequestBodyProperty: core.serialization.ObjectSchema<
    serializers.HttpInlineRequestBodyProperty.Raw,
    FernDefinition.HttpInlineRequestBodyProperty
> = core.serialization
    .object({
        "content-type": core.serialization.string().optional(),
    })
    .extend(WithDocsSchema)
    .extend(WithName)
    .extend(WithAudiences)
    .extend(core.serialization.lazyObject(() => serializers.BaseInlineableTypeReferenceSchema));

export declare namespace HttpInlineRequestBodyProperty {
    interface Raw
        extends WithDocsSchema.Raw,
            WithName.Raw,
            WithAudiences.Raw,
            serializers.BaseInlineableTypeReferenceSchema.Raw {
        "content-type"?: string | null;
    }
}
