/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { WithDocs } from "../../commons/types/WithDocs";
import { WithName } from "../../commons/types/WithName";
import { WithAvailability } from "../../commons/types/WithAvailability";

export const UnionVariantTypeReference: core.serialization.ObjectSchema<
    serializers.UnionVariantTypeReference.Raw,
    FernDefinition.UnionVariantTypeReference
> = core.serialization
    .object({
        type: core.serialization.string(),
    })
    .extend(WithDocs)
    .extend(WithName)
    .extend(WithAvailability);

export declare namespace UnionVariantTypeReference {
    interface Raw extends WithDocs.Raw, WithName.Raw, WithAvailability.Raw {
        type: string;
    }
}
