/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { OAuthGetTokenEndpoint } from "./OAuthGetTokenEndpoint";
import { OAuthRefreshTokenEndpoint } from "./OAuthRefreshTokenEndpoint";

export const OAuthSchemeSchema: core.serialization.ObjectSchema<
    serializers.OAuthSchemeSchema.Raw,
    FernDefinition.OAuthSchemeSchema
> = core.serialization.object({
    scheme: core.serialization.stringLiteral("oauth"),
    type: core.serialization.stringLiteral("client-credentials"),
    scopes: core.serialization.list(core.serialization.string()).optional(),
    "client-id-env": core.serialization.string().optional(),
    "client-secret-env": core.serialization.string().optional(),
    "token-prefix": core.serialization.string().optional(),
    "get-token": OAuthGetTokenEndpoint,
    "refresh-token": OAuthRefreshTokenEndpoint.optional(),
});

export declare namespace OAuthSchemeSchema {
    interface Raw {
        scheme: "oauth";
        type: "client-credentials";
        scopes?: string[] | null;
        "client-id-env"?: string | null;
        "client-secret-env"?: string | null;
        "token-prefix"?: string | null;
        "get-token": OAuthGetTokenEndpoint.Raw;
        "refresh-token"?: OAuthRefreshTokenEndpoint.Raw | null;
    }
}
